configfile: "config.yaml"

#=========================================================================#
# Rule: all                                                               #
#-------------------------------------------------------------------------#
# Run all.                                                                #
#=========================================================================#
rule all:
    input:
        "plots/quals.svg"


#=========================================================================#
# Rule: bwa_map                                                           #
#-------------------------------------------------------------------------#
# Maps read ({sample}.fastq) to reference genome (genome.fa).             #
# Converts resulting SAM file to BAM before writing to output.            #
#-------------------------------------------------------------------------#
rule bwa_map:
    input:
        "data/genome.fa",
        lambda wildcards: config["samples"][wildcards.sample]
    output:
        protected("mapped-reads/{sample}.bam")
    params:
        rg=r"@RG\tID:{sample}\tSM:{sample}"
    log:
        "logs/bwa-mem/{sample}.log"
    shell:
        "bwa mem -R '{params.rg}' {input} | "
        "samtools view -Sb - > {output} 2> {log}"


#=========================================================================#
# Rule: samtools_sort                                                     #
#-------------------------------------------------------------------------#
# Sorts the read alignments in specified BAM files.                       #
#=========================================================================#
rule samtools_sort:
    input:
        "mapped-reads/{sample}.bam"
    output:
        "sorted-reads/{sample}.bam"
    shell:
        "samtools sort -T sorted-reads/{wildcards.sample} "
        "-O bam {input} > {output}"


#=========================================================================#
# Rule: samtools_index                                                    #
#-------------------------------------------------------------------------#
# Indexes the sorted read alignments for random access.                   #
#=========================================================================#
rule samtools_index:
    input:
        "sorted-reads/{sample}.bam"
    output:
        "sorted-reads/{sample}.bam.bai"
    shell:
        "samtools index {input}"


#=========================================================================#
# Rule: bcftools_call                                                     #
#-------------------------------------------------------------------------#
# Aggregates all specified mapped reads and call variants using SAMtools  #
# and BCFtools.                                                           #
#=========================================================================#
rule bcftools_call:
    input:
        fa="data/genome.fa",
        bam=expand("sorted-reads/{sample}.bam", sample=config["samples"]),
        bai=expand("sorted-reads/{sample}.bam.bai",
                    sample=config["samples"])
    output:
        "calls/all.vcf"
    shell:
        "samtools mpileup -g -f {input.fa} {input.bam} | "
        "bcftools call -mv - > {output}"


#=========================================================================#
# Rule: plot_quals                                                        #
#-------------------------------------------------------------------------#
# Uses new element, a script, to generate histogram of quality scores     #
# based on variant calls in calls/all.vcf.                                #
#=========================================================================#
rule plot_quals:
    input:
        "calls/all.vcf"
    output:
        "plots/quals.svg"
    script:
        "scripts/plot-quals.py" 

